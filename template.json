{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "newVMName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new vm to be created."
      }
    },
    "labName": {
      "type": "string",
      "metadata": {
        "description": "Lab name."
      }
    }
  },
  "variables": {
    "labSubnetName": "[concat(variables('labVirtualNetworkName'), 'Subnet')]",
    "password": "LA_ACG_Together2020!!",
    "userName": "cloud_user",
    "newVMSize": "Standard_D2s_v3",
    "version": "latest",
    "osType": "Windows",
    "sku": "2019-Datacenter",
    "publisher": "MicrosoftWindowsServer",
    "offer": "WindowsServer",
    "existingLabName": "devtest-lab28",
    "labVirtualNetworkId": "[resourceId('Microsoft.DevTestLab/labs/virtualnetworks', variables('existingLabName'), variables('labVirtualNetworkName'))]",
    "labVirtualNetworkName": "[concat('Dtl', variables('existingLabName'))]",
    "resourceName": "[concat(variables('existingLabName'), '/', parameters('newVMName'))]",
    "resourceType": "Microsoft.DevTestLab/labs/virtualMachines"
  },
  "resources": [
    {
      "apiVersion": "2018-10-15-preview",
      "type": "Microsoft.DevTestLab/labs/virtualMachines",
      "name": "[variables('resourceName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "size": "[variables('newVMSize')]",
        "isAuthenticationWithSshKey": false,
        "userName": "[variables('userName')]",
        "sshKey": "",
        "password": "[variables('password')]",
        "labVirtualNetworkId": "[variables('labVirtualNetworkId')]",
        "labSubnetName": "[variables('labSubnetName')]",
        "galleryImageReference": {
          "Sku": "[variables('sku')]",
          "OsType": "[variables('osType')]",
          "Publisher": "[variables('publisher')]",
          "Offer": "[variables('offer')]",
          "Version": "[variables('version')]"
        }
      }
    }
  ],
  "outputs": {
    "vmId": {
      "type": "string",
      "value": "[resourceId(variables('resourceType'), variables('existingLabName'), parameters('newVMName'))]"
    }
  }
}
